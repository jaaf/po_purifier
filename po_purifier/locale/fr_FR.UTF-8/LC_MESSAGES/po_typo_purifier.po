# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: po_typo_purifier\n"
"POT-Creation-Date: 2016-06-02 06:53+0200\n"
"PO-Revision-Date: 2016-06-02 07:06+0200\n"
"Last-Translator: José Fournier <jaaf64@zoraldia.com>\n"
"Language-Team: \n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 1.8.7.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Poedit-SourceCharset: UTF-8\n"
"X-Poedit-Basepath: ../../..\n"
"X-Poedit-SearchPath-0: po_typo_purifier.pot\n"

#: po_typo_purifier.py:39
msgid ""
"\n"
"\n"
"po_typo_purifier : A script to detect typo errors (and more ) in "
"translated \n"
"files.\n"
"\n"
"USAGE:  popurifier.py [OPTIONS]\n"
"   \n"
"   OPTIONS:\n"
"      -h --help : display help \n"
"      -i --info : give the present info about how the program works\n"
"      -o --one-only =<rule num> : apply only this rule (not used at the "
"moment)\n"
"      -t --trans-dir=<trans-dir> : indicate translation directory  \n"
"      -d --debug : execute program in debug mode\n"
"      -p : mark a pause after a change in a message\n"
"   \n"
"\n"
"The folder that contains the program must be placed aside the folder "
"containing \n"
"the translations (.po files) or its parents. Most often, it is a folder "
"named\n"
"after your locale e.g. fr, or fr_FR.UTF-8. \n"
"Sometimes it is a folder named \"locale\"\n"
"\n"
"The typographic rules lay in the typorules.py file in the same folder as \n"
"the program.\n"
"\n"
"The folder structure looks like the following:\n"
" \n"
"     --- --po_purifier ----- po_typo_purifier (prog)\n"
"        |               |\n"
"        |               |--- typorules.py \n"
"        |\n"
"   this |-- [locale] --- pot (.po files)\n"
"        |\n"
"    or  |-- <your locale> (.po files)\n"
"        |\n"
"    or  |-- anything  -- anything (.po files)\n"
"\n"
"The program can be launched from the typo_purifier folder with the "
"following\n"
" command :\n"
"\n"
"     python3 po_typo_purifier.py\n"
" \n"
"Without any option, the program search for translation files (.po) in the \n"
"<locale> folder, where <locale> is you locale \n"
"(output by the 'echo $LANG' command). \n"
"\n"
"Whenever translated files (.po) are located elsewhere, use the \n"
"\n"
"     -t (--trans-dir) option \n"
"\n"
"to tell the program where to find them, e.g.:\"\n"
"\n"
"      python3 po_typo_purifier.py --trans-dir \"locale/pot\"\n"
"\n"
"A folder, named \"purified\" (this name is placed in the target variable) "
"is \n"
"created aside the \"po_purifier\" folder. It receives the new files. You "
"need to \n"
"use this folder to replace the initial translation folder, if  everything "
"went \n"
"well.The original folder, should be renamed or moved before pushing onto "
"zanata.\n"
"\n"
"IMPORTANT NOTE: you should always make a backup of the original folder to \n"
"be able to recover from something wrong happening while pushing onto "
"zanata.\n"
"\n"
"The program establishes the list of the files that lay into the "
"translation \n"
"folder. For each of them it reviews all the messages. The source messages "
"(EN) \n"
"are copied line for line into the target file.\n"
"\n"
"The lines of the translated messages are concatenated to form a unique "
"string, \n"
"then rules are applied in turn. Taking into account the possibility \n"
"of a lot of false positives, all the modifications need a confirmation from "
"the \n"
"user.\n"
"\n"
"The message is displayed, first with colorized spaces, then with proposed\n"
"change over a green background.\n"
"\n"
"The user has several choices:\n"
"\n"
"     - y for yes: to accept the proposed change. In this case the message "
"that \n"
"     will be written in the target file is displayed (light blue color) with "
"the \n"
"     splitting in line used.\n"
"\n"
"     -c for change: to ask for a prior change into the rule matching string "
"and \n"
"     the resume. This may be useful in certain circumstances such as a "
"short \n"
"     dash used in place of a long dash that plays the role of parenthesis "
"and \n"
"     to prevent rule from deleting spaces before and after.\n"
"     Changing the short dash with a long dash in this case, allows to keep "
"the \n"
"     spaces and to  correct the fault in one shot.\n"
"\n"
"     - s to skip the message. This is useful when the message contains "
"command \n"
"     output  or command with many options that cannot be considered as "
"target \n"
"     language text and that triggers a lot of artificial typographic faults\n"
"\n"
"     - anything else: to refuse the proposal.\n"
"\n"
"Once the message has been corrected (or not), it is split in 80 char lines \n"
"anew. Then the lines are written in the target file.\n"
"\n"
"After that, the program passes to the next message until it reaches the "
"end \n"
"of the file and passes to the next file.\n"
msgstr ""
"\n"
"\n"
"po_typo_purifier : un script pour détecter les erreurs typographiques (et "
"plus\n"
"encore) dans les fichiers traduits. \n"
"\n"
"USAGE:  popurifier.py [OPTIONS]\n"
"   \n"
"   OPTIONS:\n"
"      -h --help : affiche l'aide \n"
"      -i --info : affiche le présent texte sur la manière dont le "
"programme \n"
"                  fonctionne.\n"
"      -o --one-only =<rule num> : applique seulement cette règle (Hors "
"service)\n"
"      -t --trans-dir=<trans-dir> : précise le dossier des traductions.  \n"
"      -d --debug : exécute le programme en mode débogage\n"
"      -p : marque une pause lorsqu'un message a été changé et demande \n"
"           une relance de l'opérateur.\n"
"\n"
"\n"
"Le dossier « typo_purifier » contenant le programme doit être placé à coté \n"
"du dossier qui contient les traductions (fichier .po) . Le plus souvent il \n"
"s'agit du dossier <locale> où<locale> représente votre locale (p. ex. fr, \n"
"ou fr_FR.UTF-8). Parfois il s'agit d'un dossier appelé \\\"locale\\\". \n"
"\n"
"Les règles de typographie sont dans le fichier typorules.py dans le même\n"
"dossier que le programme.\n"
"(Pour le moment les règles sont très approximatives car elles détectent \n"
"\"beaucoup de faux positifs, à cause du mélange texte normal + texte "
"informatique)\n"
"\n"
"  La structure des dossiers ressemble à ceci :\n"
" \n"
"     --- --po_purifier ----- po_typo_purifier (prog)\n"
"        |               |\n"
"        |               |--- typorules.py \n"
"        |\n"
"     ça |-- [locale] --- pot (.po files)\n"
"        |\n"
"     ou |-- <your locale> (.po files)\n"
"        |\n"
"     ou |-- anything  -- anything (.po files)\n"
"\n"
"\n"
"On lance le programme depuis ce dossier par la commande suivante :\n"
"\n"
" python3 po_typo_purifier.py\n"
"\n"
"Sans option, le programme recherche les traduction dans votre dossier "
"\"<locale>\"\n"
"\n"
"La valeur de <locale> correspond à celle que retourne la commande 'echo "
"$LANG'.\n"
"\n"
"Si les traductions se trouvent dans un autre dossier et que vous ne voulez "
"pas\n"
"le renommer d'après votre locale, vous pouvez l'indiquer au programme avec \n"
"l'option  -t (--trans-dir), p. ex. : \n"
"\n"
"      pyton3 po_typo_purifier.py -t \\\"locale/pot\n"
"\n"
"Un dossier \\\"purified\\\" (ce nom est placé dans la variable \\\"target\\"
"\") est créé\n"
" à côté du dossier 'typo_purifier'. C'est lui qui reçoit les nouveaux "
"fichiers.\n"
"Il faudra qu'il remplace le dossier initial des traductions si tout s'est "
"bien \n"
"passé. Le dossier initial devra être renommé ou déplacé avant le push sur "
"zanata.\n"
"\n"
"NOTE IMPORTANTE: il est prudent de le sauvegarder au préalable car si "
"quelque \n"
"chose se passe mal lors du push sur Zanata, on aura toujours l'original.\n"
"\n"
"Le programme établit la liste des fichiers présents dans le dossier des \n"
"traductions.\n"
"Pour chacun des fichiers, il passe en revue les messages. Les messages en \n"
"anglais sont recopiés ligne pour ligne dans le fichier \"target/"
"<nom_du_fichier>\"\n"
"\n"
"Les lignes des messages en français sont d'abord agglutinées pour former \n"
"une chaîne unique, puis les règles de substitution lui sont appliquées une à "
"une.\n"
"Compte tenu de la variété des cas, et de la très forte possibilité de faux \n"
"positifs, toutes les modifications demande une confirmation de "
"l'utilisateur. \n"
"\n"
"Le message est d'abord affiché avec les espaces, autres que normales "
"colorisées.\n"
"Puis le message est réaffiché avec seulement la modification suggérée "
"surlignée\n"
" en vert. \n"
"\n"
"L'utilisateur dispose de plusieurs choix :\n"
"    — o oui : accepte la modification telle que proposée. Dans ce cas le "
"texte \n"
"écrit dans le fichier target est affiché (couleur bleu pâle) avec le "
"découpage \n"
"en lignes utilisé  \n"
"\n"
"   — c changer: dans ce cas l'utilisateur peut effectuer un changement dans "
"la \n"
"chaîne trouvée et reprendre.\n"
"Cela est intéressant par exemple, si un trait d'union a été utilisé à la "
"place \n"
"d'un tiret semi-cadratin (celui qui joue le rôle de parenthèse) et que la "
"règle\n"
" du trait d'union est de supprimer les espaces devant et derrière. "
"\"Remplacer \n"
"le trait d'union par un tiret semi-cadratin dans ce cas, permet de ne pas \n"
"supprimer les espaces et de faire la correction des tirets du même coup.\n"
"\n"
"  – s pour sauter le message. Cela est utile lorsqu'il s'agit d'une sortie "
"de \n"
"  commande ou d'une commande avec des tas d'options et qui n'est pas un\n"
"  véritable texte dans la langue cible. Cela évite des détections sur des "
"fautes \n"
"  typographiques artificielles.\n"
"\n"
"  — Toute autre chose : refuse la modification.  \n"
"Une fois le message corrigé (ou pas), il est recomposé en lignes de \n"
"80 caractères maximum.\n"
"Les lignes sont ensuite écrites dans le fichier cible.\n"
"Puis on passe au message suivant, jusqu'à épuiser le fichier avant de "
"passer \n"
"au suivant.\n"

#: po_typo_purifier.py:137
msgid "y"
msgstr "o"

#: po_typo_purifier.py:138
msgid "c"
msgstr ""

#: po_typo_purifier.py:139
msgid "s"
msgstr ""

#: po_typo_purifier.py:163
msgid "%s %s non-breakable space"
msgstr "%s %s espace insécable"

#: po_typo_purifier.py:164
msgid "%s %s narrow non-breakable space"
msgstr "%s %s espace fine insécable"

#: po_typo_purifier.py:165
msgid "%s %s narrow breakable space"
msgstr "%s %s espace fine sécable"

#: po_typo_purifier.py:169
msgid "%s %s normal space"
msgstr "%s %s espace normale"

#: po_typo_purifier.py:200
msgid "%s Error while applying the following rule:%s %s"
msgstr "%s Erreur lors de l'application de :%s %s"

#: po_typo_purifier.py:204
msgid "k + return pour continuer"
msgstr "k + Entrée pour poursuivre"

#: po_typo_purifier.py:220
msgid "%s Change suggested in message %d of the %s file; Rule: %s %s"
msgstr "%s Changement proposé dans le message  %d du fichier %s; Règle: %s %s"

#: po_typo_purifier.py:226
msgid ""
"%s Do you confirm this change? (%s %s %s for yes, %s %s %s for prior change,"
"%s %s %s to skip this message, %s any thing else – like return – %s for no)%s"
msgstr ""
"%s Acceptez-vous ce changement ? (%s %s %s pour oui, %s %s %s pour un "
"changement préalable,%s %s %s pour sauter ce message, %s toute  autre chose "
"– un simple Entrée par exemple – %s pour non)%s"

#: po_typo_purifier.py:235
msgid "%sChange accepted %s"
msgstr "%s Changement accepté %s"

#: po_typo_purifier.py:240
msgid ""
"%s Warning: application of the rule doesn't change the message at all. %s\n"
msgstr ""
"%s Attention ! L'application de la règle n'a pas modifié le message. %s\n"

#: po_typo_purifier.py:259
msgid "%s You asked for a prior change into the found  matching string %s"
msgstr ""
"%s Vous avez demandé à effectuer un changement préalable dans la chaîne "
"trouvée %s"

#: po_typo_purifier.py:262
msgid "%s Please enter the part of the maching string to be replaced %s"
msgstr ""
"%s Saisissez la partie de la chaîne trouvée que vous voulez remplacer %s"

#: po_typo_purifier.py:264
msgid "%s Please enter the substitute string %s"
msgstr "%s Saisissez la chaîne de remplacement %s"

#: po_typo_purifier.py:271
msgid "%s New content %s"
msgstr "%s Nouveau contenu %s"

#: po_typo_purifier.py:274
msgid "%sNothing can be changed! Please try again.%s"
msgstr "%sAucun changement n'a pu être opéré ! Essayer encore.%s"

#: po_typo_purifier.py:276 po_typo_purifier.py:328 po_typo_purifier.py:349
msgid "%s Press any key to continue%s"
msgstr "%s Pressez une touche quelconque pour continuer.%s"

#: po_typo_purifier.py:281
msgid ""
"%s Do you confirm this prior change? (%s %s %s for yes, %s anything else %s "
"for no)%s"
msgstr ""
"%s Confirmez-vous ce changement préalable ? (%s %s %s pour oui, %s toute "
"autre chose – comme Entrée –  %s pour non)%s"

#: po_typo_purifier.py:287
msgid "%s change confirmed %s"
msgstr "%s changement confirmé %s"

#: po_typo_purifier.py:298
msgid "%s change discarded %s"
msgstr "%s changement abandonné%s"

#: po_typo_purifier.py:319
msgid "%s body of message %d of %s file, not changed %s"
msgstr "%scorps du message  %d du fichier %s inchangé %s"

#: po_typo_purifier.py:322
msgid "%s body of message %d of %s file has been changed as follows: %s"
msgstr "%s le corps du message %d du fichier %s a été modifié comme suit : %s"

#: po_typo_purifier.py:340
msgid "%s first line of message %d of %s file, not changed %s"
msgstr "%s première ligne du message %d du fichier %s inchangée %s"

#: po_typo_purifier.py:343
msgid "%s first line of message %d of %s file has been changed as follows: %s"
msgstr ""
"%s la première ligne du message %d du fichier %s a été modifiée comme suit : "
"%s"

#: po_typo_purifier.py:355
msgid ""
"po_typo_purifier.py [OPTIONS]\n"
"   OPTIONS:\n"
"      -h --help : display this help \n"
"      -i --info : give info about how the program works\n"
"      -o --one-only =<rule num> : apply only this rule (not used at the "
"moment)\n"
"      -t --trans-dir=<trans-dir> : indicate translation directory  \n"
"      -d --debug : execute program in debug mode\n"
"      -p : mark a pause after a change in a message\n"
"   "
msgstr ""
"po_typo_purifier.py [OPTIONS]\n"
"   OPTIONS:\n"
"      -h --help : pour afficher cette aide \n"
"      -i --info : pour des explications sur le fonctionnement du programme\n"
"      -o --one-only =<rule num> : n'utiliser que cette seule règle (pas "
"encore en service)\n"
"      -t --trans-dir=<trans-dir> : précise le dossier des traductions depuis "
"l'emplacement du programme  \n"
"      -d --debug : exécute le programme en mode debug\n"
"      -p : marque une pause après la modification d'un message\n"
"   "

#: po_typo_purifier.py:422
msgid "Compiling typo rule: %s"
msgstr "Compilation de la règle typographique : %s"

#: po_typo_purifier.py:427
msgid "The rule has been compiled"
msgstr "La règle a été compilée"

#~ msgid ""
#~ "\n"
#~ "\n"
#~ "po_typo_purifier : A script to detect typo errors (and more ) in "
#~ "translated \n"
#~ "files.\n"
#~ "\n"
#~ "USAGE:  popurifier.py [OPTIONS]\n"
#~ "   \n"
#~ "   OPTIONS:\n"
#~ "      -h --help : display help \n"
#~ "      -i --info : give the present info about how the program works\n"
#~ "      -o --one-only =<rule num> : apply only this rule (not used at the "
#~ "moment)\n"
#~ "      -t --trans-dir=<trans-dir> : indicate translation directory  \n"
#~ "      -d --debug : execute program in debug mode\n"
#~ "      -p : mark a pause after a change in a message\n"
#~ "   \n"
#~ "\n"
#~ "The folder that contains the program must be placed aside the folder "
#~ "containing \n"
#~ "the translations (.po files) or its parents. Most often, it is a folder "
#~ "named\n"
#~ "after your locale e.g. fr, or fr_FR.UTF-8. \n"
#~ "Sometimes it is a folder named \"locale\"\n"
#~ "\n"
#~ "The typographic rules lay in the typorules.py file in the same folder "
#~ "as \n"
#~ "the program.\n"
#~ "\n"
#~ "The folder structure looks like the following:\n"
#~ " \n"
#~ "     --- --po_purifier ----- po_typo_purifier (prog)\n"
#~ "        |               |\n"
#~ "        |               |--- typorules.py \n"
#~ "        |\n"
#~ "   this |-- [locale] --- pot (.po files)\n"
#~ "        |\n"
#~ "    or  |-- <your locale> (.po files)\n"
#~ "        |\n"
#~ "    or  |-- anything  -- anything (.po files)\n"
#~ "\n"
#~ "The program can be launched from the typo_purifier folder with the "
#~ "following\n"
#~ " command :\n"
#~ "\n"
#~ "     python3 po_typo_purifier.py\n"
#~ " \n"
#~ "Without any option, the program search for translation files (.po) in "
#~ "the \n"
#~ "<locale> folder, where <locale> is you locale \n"
#~ "(output by the 'echo $LANG' command). \n"
#~ "\n"
#~ "Whenever translated files (.po) are located elsewhere, use the \n"
#~ "\n"
#~ "     -t (--trans-dir) option \n"
#~ "\n"
#~ "to tell the program where to find them, e.g.:\"\n"
#~ "\n"
#~ "      python3 po_typo_purifier.py --trans-dir \"locale/pot\"\n"
#~ "\n"
#~ "A folder, named \"purified\" (this name is placed in the target variable) "
#~ "is \n"
#~ "created aside the \"po_purifier\" folder. It receives the new files. You "
#~ "need to \n"
#~ "use this folder to replace the initial translation folder, if  everything "
#~ "went \n"
#~ "well.The original folder, should be renamed or moved before pushing onto "
#~ "zanata.\n"
#~ "\n"
#~ "IMPORTANT NOTE: you should always make a backup of the original folder "
#~ "to \n"
#~ "be able to recover from something wrong happening while pushing onto "
#~ "zanata.\n"
#~ "\n"
#~ "The program establishes the list of the files that lay into the "
#~ "translation \n"
#~ "folder. For each of them it reviews all the messages. The source messages "
#~ "(EN) \n"
#~ "are copied line for line into the target file.\n"
#~ "\n"
#~ "The lines of the translated messages are concatenated to form a unique "
#~ "string, \n"
#~ "then rules are applied in turn. Taking into account the possibility \n"
#~ "of a lot of false positives, all the modifications need a confirmation "
#~ "from the \n"
#~ "user.\n"
#~ "\n"
#~ "The message is displayed, first with colorized spaces, then with "
#~ "proposed\n"
#~ "change over a green background.\n"
#~ "\n"
#~ "The user has several choices:\n"
#~ "\n"
#~ "     - y for yes: to accept the proposed change. In this case the message "
#~ "that \n"
#~ "     will be written in the target file is displayed (light blue color) "
#~ "with the \n"
#~ "     splitting in line used.\n"
#~ "\n"
#~ "     -c for change: to ask for a prior change into the rule matching "
#~ "string and \n"
#~ "     the resume. This may be useful in certain circumstances such as a "
#~ "short \n"
#~ "     dash used in place of a long dash that plays the role of parenthesis "
#~ "and \n"
#~ "     to prevent rule from deleting spaces before and after.\n"
#~ "     Changing the short dash with a long dash in this case, allows to "
#~ "keep the \n"
#~ "     spaces and to  correct the fault in one shot.\n"
#~ "\n"
#~ "     - anything else: to refuse the proposal.\n"
#~ "\n"
#~ "Once the message has been corrected (or not), it is split in 80 char "
#~ "lines \n"
#~ "anew. Then the lines are written in the target file.\n"
#~ "\n"
#~ "After that, the program passes to the next message until it reaches the "
#~ "end \n"
#~ "of the file and passes to the next file.\n"
#~ msgstr ""
#~ "\n"
#~ "\n"
#~ "po_typo_purifier : un script pour détecter les erreurs typographiques (et "
#~ "plus\n"
#~ "encore) dans les fichiers traduits. \n"
#~ "\n"
#~ "USAGE:  popurifier.py [OPTIONS]\n"
#~ "   \n"
#~ "   OPTIONS:\n"
#~ "      -h --help : affiche l'aide \n"
#~ "      -i --info : affiche le présent texte sur la manière dont le "
#~ "programme \n"
#~ "                  fonctionne.\n"
#~ "      -o --one-only =<rule num> : applique seulement cette règle (Hors "
#~ "service)\n"
#~ "      -t --trans-dir=<trans-dir> : précise le dossier des traductions.  \n"
#~ "      -d --debug : exécute le programme en mode débogage\n"
#~ "      -p : marque une pause lorsqu'un message a été changé et demande \n"
#~ "           une relance de l'opérateur.\n"
#~ "\n"
#~ "\n"
#~ "Le dossier « typo_purifier » contenant le programme doit être placé à "
#~ "coté \n"
#~ "du dossier qui contient les traductions (fichier .po) . Le plus souvent "
#~ "il \n"
#~ "s'agit du dossier <locale> où<locale> représente votre locale (p. ex. "
#~ "fr, \n"
#~ "ou fr_FR.UTF-8). Parfois il s'agit d'un dossier appelé \\\"locale\\\". \n"
#~ "\n"
#~ "Les règles de typographie sont dans le fichier typorules.py dans le même\n"
#~ "dossier que le programme.\n"
#~ "(Pour le moment les règles sont très approximatives car elles détectent \n"
#~ "\"beaucoup de faux positifs, à cause du mélange texte normal + texte "
#~ "informatique)\n"
#~ "\n"
#~ "  La structure des dossiers ressemble à ceci :\n"
#~ " \n"
#~ "     --- --po_purifier ----- po_typo_purifier (prog)\n"
#~ "        |               |\n"
#~ "        |               |--- typorules.py \n"
#~ "        |\n"
#~ "     ça |-- [locale] --- pot (.po files)\n"
#~ "        |\n"
#~ "     ou |-- <your locale> (.po files)\n"
#~ "        |\n"
#~ "     ou |-- anything  -- anything (.po files)\n"
#~ "\n"
#~ "\n"
#~ "On lance le programme depuis ce dossier par la commande suivante :\n"
#~ "\n"
#~ " python3 po_typo_purifier.py\n"
#~ "\n"
#~ "Sans option, le programme recherche les traduction dans votre dossier "
#~ "\"<locale>\"\n"
#~ "\n"
#~ "La valeur de <locale> correspond à celle que retourne la commande 'echo "
#~ "$LANG'.\n"
#~ "\n"
#~ "Si les traductions se trouvent dans un autre dossier et que vous ne "
#~ "voulez pas\n"
#~ "le renommer d'après votre locale, vous pouvez l'indiquer au programme "
#~ "avec \n"
#~ "l'option  -t (--trans-dir), p. ex. : \n"
#~ "\n"
#~ "      pyton3 po_typo_purifier.py -t \\\"locale/pot\n"
#~ "\n"
#~ "Un dossier \\\"purified\\\" (ce nom est placé dans la variable \\\"target"
#~ "\\\") est créé\n"
#~ " à côté du dossier 'typo_purifier'. C'est lui qui reçoit les nouveaux "
#~ "fichiers.\n"
#~ "Il faudra qu'il remplace le dossier initial des traductions si tout s'est "
#~ "bien \n"
#~ "passé. Le dossier initial devra être renommé ou déplacé avant le push sur "
#~ "zanata.\n"
#~ "\n"
#~ "NOTE IMPORTANTE: il est prudent de le sauvegarder au préalable car si "
#~ "quelque \n"
#~ "chose se passe mal lors du push sur Zanata, on aura toujours l'original.\n"
#~ "\n"
#~ "Le programme établit la liste des fichiers présents dans le dossier des \n"
#~ "traductions.\n"
#~ "Pour chacun des fichiers, il passe en revue les messages. Les messages "
#~ "en \n"
#~ "anglais sont recopiés ligne pour ligne dans le fichier \"target/"
#~ "<nom_du_fichier>\"\n"
#~ "\n"
#~ "Les lignes des messages en français sont d'abord agglutinées pour "
#~ "former \n"
#~ "une chaîne unique, puis les règles de substitution lui sont appliquées "
#~ "une à une.\n"
#~ "Compte tenu de la variété des cas, et de la très forte possibilité de "
#~ "faux \n"
#~ "positifs, toutes les modifications demande une confirmation de "
#~ "l'utilisateur. \n"
#~ "\n"
#~ "Le message est d'abord affiché avec les espaces, autres que normales "
#~ "colorisées.\n"
#~ "Puis le message est réaffiché avec seulement la modification suggérée "
#~ "surlignée\n"
#~ " en vert. \n"
#~ "\n"
#~ "L'utilisateur dispose de plusieurs choix :\n"
#~ "    — o oui : accepte la modification telle que proposée. Dans ce cas le "
#~ "texte \n"
#~ "écrit dans le fichier target est affiché (couleur bleu pâle) avec le "
#~ "découpage \n"
#~ "en lignes utilisé  \n"
#~ "\n"
#~ "   — c changer: dans ce cas l'utilisateur peut effectuer un changement "
#~ "dans la \n"
#~ "chaîne trouvée et reprendre.\n"
#~ "Cela est intéressant par exemple, si un trait d'union a été utilisé à la "
#~ "place \n"
#~ "d'un tiret semi-cadratin (celui qui joue le rôle de parenthèse) et que la "
#~ "règle\n"
#~ " du trait d'union est de supprimer les espaces devant et derrière. "
#~ "\"Remplacer \n"
#~ "le trait d'union par un tiret semi-cadratin dans ce cas, permet de ne "
#~ "pas \n"
#~ "supprimer les espaces et de faire la correction des tirets du même coup.\n"
#~ "\n"
#~ "  — Toute autre chose : refuse la modification.  \n"
#~ "Une fois le message corrigé (ou pas), il est recomposé en lignes de \n"
#~ "80 caractères maximum.\n"
#~ "Les lignes sont ensuite écrites dans le fichier cible.\n"
#~ "Puis on passe au message suivant, jusqu'à épuiser le fichier avant de "
#~ "passer \n"
#~ "au suivant.\n"

#~ msgid ""
#~ "%s Do you confirm this change? (%s %s %s for yes, %s %s %s for prior "
#~ "change,%s any thing else – like return – %s for no)%s"
#~ msgstr ""
#~ "%s Confirmez-vous ce changement ? (%s %s %s pour oui, %s %s %s pour un "
#~ "changement préalable,%s toute autre chose – comme simplement ENTRÉE – %s "
#~ "pour non)%s"

#~ msgid "%s message %d of %s file, not changed %s"
#~ msgstr "%s message %d du fichier %s inchangé %s"

#~ msgid "%s message %d of %s file has been changed as follows: %s"
#~ msgstr "%s Le message  %d du fichier %s a été modifié comme suit : %s"

#~ msgid ""
#~ "\n"
#~ "  The folder that contains the program must be placed aside the folder "
#~ "containing \n"
#~ "  the translations (.po files) or its parents. Most often, it is a folder "
#~ "named after \n"
#~ "  your locale e.g. fr, or fr_FR.UTF-8. Sometimes it is a folder named "
#~ "\"locale\"\n"
#~ "\n"
#~ "\n"
#~ "  The typographic rules lay in the typorules.py file in the same folder "
#~ "as the program.\n"
#~ "\n"
#~ "  The folder structure looks like the following:\n"
#~ " \n"
#~ "     --- --po_purifier ----- po_typo_purifier (prog)\n"
#~ "        |               |\n"
#~ "        |               |--- typorules.py \n"
#~ "        |\n"
#~ "   this |-- [locale] --- pot (.po files)\n"
#~ "        |\n"
#~ "    or  |-- <your locale> (.po files)\n"
#~ "        |\n"
#~ "    or  |-- anything  -- anything (.po files)\n"
#~ "\n"
#~ "  The program can be launched from the typo_purifier folder with the "
#~ "following command :\n"
#~ "\n"
#~ "       python3 po_typo_purifier.py\n"
#~ " \n"
#~ "  Without any option, the program search for translation files (.po) in "
#~ "the \n"
#~ "  <locale> folder, where <locale> is you locale (output by the 'echo "
#~ "$LANG' command). \n"
#~ "\n"
#~ "  Whenever translated files (.po) are located elsewhere, use the -t (--"
#~ "trans-dir) option \n"
#~ "  to tell the program where to find them, e.g.:\"\n"
#~ "\n"
#~ "      python3 po_typo_purifier.py --trans-dir \"locale/pot\"\n"
#~ "\n"
#~ "  A folder, named \"purified\" (this name is placed in the target "
#~ "variable) is \n"
#~ "  created aside the \"po_purifier\" folder. It receives the new files. "
#~ "You need to use this \n"
#~ "  folder to replace the initial translation folder, if  everything went "
#~ "well.\n"
#~ "  The original folder, should be renamed ou moved before pushing onto "
#~ "zanata.\n"
#~ "\n"
#~ "  IMPORTANTE NOTE: you should always make a backup of the original folder "
#~ "to \n"
#~ "  be able to recover from something wrong happening while pushing onto "
#~ "zanata.\n"
#~ "\n"
#~ "  The program establishes the list of the files that lay into the "
#~ "translation \n"
#~ "  folder. For each of them\n"
#~ "  it reviews all the messages. The source messages (EN) are copied line "
#~ "for \n"
#~ "  line into the target file.\n"
#~ "\n"
#~ "  The lines of the translated messages are concatenated to form a "
#~ "unique \n"
#~ "  string, then rules are applied in turn. Taking into account the "
#~ "possibility \n"
#~ "  of a lot of false positive, all the modifications need a confirmation "
#~ "from the user.\n"
#~ "\n"
#~ "  The message is displayed, first with colorized spaces, then with "
#~ "proposed\n"
#~ "  change over a green background.\n"
#~ "\n"
#~ "  The user has several choices:\n"
#~ "\n"
#~ "     - y for yes: to accept the proposed change. In this case the message "
#~ "that \n"
#~ "     will be written in the target file is displayed (light blue color) "
#~ "with the \n"
#~ "     splitting in line used.\n"
#~ "\n"
#~ "     -c for change: to ask for a prior change into the rule matching "
#~ "string and \n"
#~ "     the resume. This may be useful in certain circumstances such as a "
#~ "short dash used in \n"
#~ "     place of a long dash that plays the role of parenthesis and to "
#~ "prevent rule from deleting \n"
#~ "     spaces before and after.\n"
#~ "     Changing the short dash with a long dash in this case, allows to "
#~ "keep the \n"
#~ "     spaces and to  correct the fault in one shot.\n"
#~ "\n"
#~ "     - anything else: to refuse the proposal.\n"
#~ "\n"
#~ "  Once the message has been corrected (or not), it is split in 80 char "
#~ "lines \n"
#~ "  anew. Then the lines are written in the target file.\n"
#~ "\n"
#~ "  After that, the program passes to the next message until it reaches the "
#~ "end \n"
#~ "  of the file and passes to the next file.\n"
#~ msgstr ""
#~ "\n"
#~ "Le dossier contenant le programme (typo_purifier) doit être placé à "
#~ "coté \n"
#~ "du dossier qui contient les traductions (fichier .po) . Le plus souvent "
#~ "il \n"
#~ "s'agit du dossier <locale> où<locale> représente votre locale (p. ex. "
#~ "fr, \n"
#~ "ou fr_FR.UTF-8). Parfois il s'agit d'un dossier appelé \\\"locale\\\". \n"
#~ "\n"
#~ "Les règles de typographie sont dans le fichier typorules.py dans le même\n"
#~ "dossier que le programme.\n"
#~ "(Pour le moment les règles sont très approximatives car elles détectent \n"
#~ "\"beaucoup de faux positifs, à cause du mélange texte normal + texte "
#~ "informatique)\n"
#~ "\n"
#~ "  La structure des dossiers ressemble à ceci :\n"
#~ " \n"
#~ "     --- --po_purifier ----- po_typo_purifier (prog)\n"
#~ "        |               |\n"
#~ "        |               |--- typorules.py \n"
#~ "        |\n"
#~ "     ça |-- [locale] --- pot (.po files)\n"
#~ "        |\n"
#~ "     ou |-- <your locale> (.po files)\n"
#~ "        |\n"
#~ "     ou |-- anything  -- anything (.po files)\n"
#~ "\n"
#~ "\n"
#~ "On lance le programme depuis ce dossier par la commande suivante :\n"
#~ "\n"
#~ " python3 po_typo_purifier.py\n"
#~ "\n"
#~ "Sans option, le programme recherche les traduction dans votre dossier "
#~ "\"<locale>\"\n"
#~ "\n"
#~ "La valeur de <locale> correspond à celle que retourne la commande 'echo "
#~ "$LANG'.\n"
#~ "\n"
#~ "Si les traductions se trouvent dans un autre dossier et que vous ne "
#~ "voulez pas\n"
#~ "le renommer d'après votre locale, vous pouvez l'indiquer au programme "
#~ "avec l'option  -t (--trans-dir), p. ex. : \n"
#~ "\n"
#~ "      pyton3 po_typo_purifier.py -t \\\"locale/pot\n"
#~ "\n"
#~ "Un dossier \\\"purified\\\" (ce nom est placé dans la variable \\\"target"
#~ "\\\") est crée à \n"
#~ "côté du dossier 'typo_purifier'. C'est lui qui reçoit les nouveaux "
#~ "fichiers.\n"
#~ "Il faudra qu'il remplace le dossier initial des traductions si tout s'est "
#~ "bien passé.\n"
#~ "Le dossier initial devra être renommé ou déplacé avant le push sur "
#~ "zanata.\n"
#~ "\n"
#~ "\"NOTE IMPORTANTE: il est prudent de le sauvegarder au préalable car si "
#~ "\"\n"
#~ "quelque chose se passe mal lors du push sur Zanata, on aura toujours "
#~ "l'original\\n\"\n"
#~ "\\n\"\n"
#~ "Le programme établit la liste des fichiers présents dans le dossier des "
#~ "traductions.\n"
#~ "Pour chacun des fichiers, il passe en revue les messages. Les messages "
#~ "en \n"
#~ "anglais sont recopiés ligne pour ligne dans le fichier \"target/"
#~ "<nom_du_fichier>\"\n"
#~ "\n"
#~ "Les lignes des messages en français sont d'abord agglutinées pour "
#~ "former \n"
#~ "une chaîne unique, puis les règles de substitution lui sont appliquées "
#~ "une à une.\n"
#~ "Compte tenu de la variété des cas, et de la très forte possibilité de "
#~ "faux positifs\n"
#~ "toutes les modifications demande une confirmation de l'utilisateur. \n"
#~ "\n"
#~ "Le message est d'abord affiché avec les espaces, autres que normales "
#~ "colorisées.\n"
#~ "Puis le message est réaffiché avec seulement la modification suggérée "
#~ "surlignée en vert. \n"
#~ "\n"
#~ "L'utilisateur dispose de plusieurs choix :\n"
#~ "    — o oui : accepte la modification telle que proposée. Dans ce cas le "
#~ "texte écrit dans le fichier target est affiché (couleur bleu pâle) avec "
#~ "le découpage en lignes utilisé  \n"
#~ "\n"
#~ "   — c changer: dans ce cas l'utilisateur peut effectuer un changement "
#~ "dans la chaîne trouvée et reprendre.\n"
#~ "Cela est intéressant par exemple, si un trait d'union a été utilisé à la "
#~ "place d'un tiret semi-cadration (celui qui joue le rôle de parenthèse) et "
#~ "que la règle du trait d'union est de supprimer les espaces devant et "
#~ "derrière. \"Remplacer le trait d'union par un tiret semi-cadratin dans ce "
#~ "cas, permet de ne pas supprimer les espaces et de faire la correction des "
#~ "tirets du même coup.\n"
#~ "\n"
#~ "  — Toute autre chose : refuse la modification.  \n"
#~ "Une fois le message corrigé (ou pas), il est recomposé en lignes de 80 "
#~ "caractères maximum.\n"
#~ "Les lignes sont ensuite écrites dans le fichier cible.\n"
#~ "Puis on passe au message suivant, jusqu'à épuiser le fichier avant de "
#~ "passer au suivant.\n"

#~ msgid "%s Change suggested in message %d of the %s file; type is: %s %s"
#~ msgstr ""
#~ "%s Changement proposé dans le message  %d du fichier %s ; Type : %s %s"

#~ msgid ""
#~ "%s Do you confirm this change? (  %s %s %s for yes, %s %s %s for prior "
#~ "change, %s any thing else – like return – %s for no)%s"
#~ msgstr ""
#~ "%s Confirmez-vous ce changement ? (  %s %s %s pour oui, %s %s %s pour un "
#~ "changement préalable, %s toute autre chose – comme Entrée – %s pour non)%s"

#~ msgid "%s You asked for a prior change into the found matching string %s"
#~ msgstr ""
#~ "%s Vous avez demandé un changement préalable dans la chaîne trouvée %s"

#~ msgid ""
#~ "\n"
#~ "Le dossier contenant le programme (typo_purifier) doit être placé à coté "
#~ "du \n"
#~ "dossier qui contient les traductions (fichier .po) . Le plus souvent il \n"
#~ "s'agit du dossier <locale> où<locale> représente votre locale (p. ex. fr, "
#~ "ou \n"
#~ "fr_FR.UTF-8). Parfois il s'agit d'un dossier appelé \"locale\". \n"
#~ "S\n"
#~ "\n"
#~ "Les règles de typographie sont dans le fichier typorules.py dans le même\n"
#~ "dossier que le programme.\n"
#~ "(Pour le moment les règles sont très approximatives car elles détectent "
#~ "beaucoup\n"
#~ "de faux positifs, à cause du mélange texte normal + texte informatique)\n"
#~ "\n"
#~ "On lance le programme depuis ce dossier par la commande suivante :\n"
#~ "\n"
#~ "  python3 po_typo_purifier.py\n"
#~ "\n"
#~ "Sans option, le programme recherche les traduction dans votre dossier "
#~ "<locale>.\n"
#~ "La valeur de <locale> correspond à celle que retourne la commande 'echo "
#~ "$LANG'.\n"
#~ "\n"
#~ "Si les traductions se trouvent dans un autre dossier et que vous ne "
#~ "voulez pas\n"
#~ "le renommer d'après votre locale, vous pouvez l'indiquer au programme "
#~ "avec l'option \n"
#~ "-t (--trans-dir), p. ex. : \n"
#~ "\n"
#~ " pyton3 po_typo_purifier.py -t \"locale/pot\"\n"
#~ "\n"
#~ "Un dossier \"purified\" (ce nom est placé dans la variable \"target\") "
#~ "est crée à \n"
#~ "côté du dossier 'typo_purifier'. C'est lui qui reçoit les nouveaux "
#~ "fichiers.\n"
#~ "Il faudra qu'il remplace le dossier initial des traductions si tout s'est "
#~ "bien\n"
#~ "passé. \n"
#~ "Le dossier d'origine  quant à lui n'est pas touché mais devra soit être "
#~ "déplacé, \n"
#~ "soit être supprimé, soit être renommé avant le push sur zanata.\n"
#~ "\n"
#~ "NOTE IMPORTANTE: il est prudent de le sauvegarder au préalable car si "
#~ "quelque chose \n"
#~ "se passe mal lors du push sur Zanata, on aura toujours l'original\n"
#~ "\n"
#~ "Le programme établit la liste des fichiers présents dans le dossier des "
#~ "traductions.\n"
#~ "Pour chacun des fichiers, il passe en revue les messages. Les messages "
#~ "en \n"
#~ "anglais sont recopiés ligne pour ligne dans le fichier target/"
#~ "<nom_du_fichier>\n"
#~ "\n"
#~ "Les lignes des messages en français sont d'abord agglutinées pour former "
#~ "une \n"
#~ "chaîne unique, puis les règles de substitution lui sont appliquées une à "
#~ "une.\n"
#~ "Compte tenu de la variété des cas, et de la très forte possibilité de "
#~ "faux positifs,\n"
#~ "toutes les modifications demande une confirmation de l'utilisateur. \n"
#~ "\n"
#~ "Le message est d'abord affiché avec les espaces, autres que normales, "
#~ "colorisées.\n"
#~ "Puis le message est réaffiché avec seulement la modification suggérée \n"
#~ "surlignée en vert. \n"
#~ "\n"
#~ "L'utilisateur dispose de plusieurs choix :\n"
#~ "  — o oui : accepte la modification telle que proposée. Dans ce cas le "
#~ "texte écrit dans \n"
#~ "   le fichier target est affiché (couleur bleu pâle) avec le découpage en "
#~ "ligne utilisé  \n"
#~ "\n"
#~ "  — c changer: dans ce cas l'utilisateur peut effectuer un changement "
#~ "dans la chaîne \n"
#~ "   trouvée et reprendre.\n"
#~ "   Cela est intéressant par exemple, si un trait d'union a été utilisé à "
#~ "la place \n"
#~ "   d'un tiret semi-cadration (celui qui joue le rôle de parenthèse) et "
#~ "que la règle \n"
#~ "   du trait d'union est de supprimer les espaces devant et derrière. "
#~ "Remplacer le \n"
#~ "   trait d'union par un tiret semi-cadratin dans ce cas, permet de ne pas "
#~ "supprimer\n"
#~ "   les espaces et de faire la correction des tirets du même coup.\n"
#~ "\n"
#~ "\n"
#~ "  — Toute autre chose : refuse la modification. \n"
#~ "\n"
#~ "Une fois le message corrigé (ou pas), il est recomposé en lignes de 80 "
#~ "caractères maximum. \n"
#~ "Les lignes sont ensuite écrites dans le fichier cible.\n"
#~ "\n"
#~ "Puis on passe au message suivant, jusqu'à épuiser le fichier avant de "
#~ "passer au suivant.\n"
#~ "\n"
#~ msgstr ""
#~ "\n"
#~ "The folder that contains the program must be placed aside the folder "
#~ "containing \n"
#~ "the translations (.po files) or its parents. Most often, it is a folder "
#~ "named after \n"
#~ "your locale e.g. fr, or fr_FR.UTF-8. Sometimes it is a folder named "
#~ "\"locale\"\n"
#~ "\n"
#~ "The typographic rules lay in the typorules.py file in the same folder as "
#~ "the program.\n"
#~ "\n"
#~ "The program can be launched from the typo_purifier folder with the "
#~ "following command :\n"
#~ "\n"
#~ " python3 po_typo_purifier.py \n"
#~ "\n"
#~ "Without any option, the program search for translation files (.po) in the "
#~ "<locale> folder, where\n"
#~ "<locale> is you locale (output by the 'echo $LANG' command). \n"
#~ "\n"
#~ "Whenever translated files (.po) are located elsewhere, use the -t (--"
#~ "trans-dir) option to tell \n"
#~ "the program where to find them, e.g.:\n"
#~ "\n"
#~ " python3 po_typo_purifier.py --trans-dir \"locale/pot\"\n"
#~ "\n"
#~ "A folder, named \"purified\" (this name is placed in the target variable) "
#~ "is created aside the \n"
#~ "\"po_purifier\" folder. It receives the new files. You need to use this "
#~ "folder to replace the initial \n"
#~ "translation folder, if  everything went well.\n"
#~ "The original folder, should be renamed ou moved before pushing onto "
#~ "zanata.\n"
#~ "\n"
#~ "IMPORTANTE NOTE: you should always make a backup of the original folder "
#~ "to be able\n"
#~ "to recover from something wrong happening while pushing onto zanata.\n"
#~ "\n"
#~ "The program establishes the list of the files that lay into the "
#~ "translation folder. For each of them\n"
#~ "it reviews all the messages. The source messages (EN) are copied line for "
#~ "line into the target file.\n"
#~ "\n"
#~ "The lines of the translated messages are concatenated to form a unique "
#~ "string, then rules are \n"
#~ "applied in turn. Taking into account the possibility of a lot of false "
#~ "positive, all the modifications\n"
#~ " need a confirmation from the user.\n"
#~ "\n"
#~ "The message is displayed, first with colorized spaces, then with change "
#~ "proposed over a green \n"
#~ "background.\n"
#~ "\n"
#~ "The user has several choices:\n"
#~ " - y for yes: to accept the proposed change. In this case the message "
#~ "that will be written in the \n"
#~ "target file is displayed (light blue color) with the splitting in line "
#~ "used.\n"
#~ "\n"
#~ " -c for change: to ask for a prior change into the rule matching string "
#~ "and the resume. \n"
#~ "  This may be useful in certain circumstances such as a short dash used "
#~ "in place of a long dash \n"
#~ "  that plays the role of parenthesis and to prevent rule from deleting "
#~ "spaces before and after. \n"
#~ "  Changing the short dash with a long dash in this case, allows to keep "
#~ "the spaces and to  correct \n"
#~ " \n"
#~ "  the fault in one shot.\n"
#~ "\n"
#~ "  - anything else: to refuse the proposal.\n"
#~ "\n"
#~ "Once the message has been corrected (or not), it is split in 80 char "
#~ "lines anew. Then the lines\n"
#~ "are written in the target file.\n"
#~ "\n"
#~ "After that, the program passes to the next message until it reaches the "
#~ "end of the file and passes to \n"
#~ "the next file.\n"

#~ msgid ""
#~ "%s Do you confirm this prior change? (%s for yes, anything else for no)%s"
#~ msgstr ""
#~ "%s Confirmez-vous ce changement préalable ? (%s pour oui, autre chose "
#~ "pour non)%s"

#~ msgid ""
#~ "%s Do you confirm this change? (  %s %s %s%s for yes, %s %s %s for prior "
#~ "change, %s%s any thing eles for no)%s"
#~ msgstr ""
#~ "%s Confirmez-vous ce changement ? (  %s %s %s%s pour oui, %s %s %s pour "
#~ "une modification préalable, %s%s le reste pour non)%s"

#~ msgid ""
#~ "%s Attention la substitution conserve le même contenu. Nous l'ignorons. "
#~ "%s\n"
#~ msgstr ""
#~ "%s Attention la substitution conserve le même contenu. Nous l'ignorons. "
#~ "%s\n"

#~ msgid ""
#~ "%s Do you confirm this prior change? (%s%s for yes, anything else for "
#~ "no)%s"
#~ msgstr ""
#~ "%s Confirmez-vous ce changement préalable ? (%s%s pour oui, le reste pour "
#~ "non)%s"
